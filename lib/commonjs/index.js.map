{"version":3,"sources":["index.tsx"],"names":["FlatListWithLoop","data","horizontal","props","offset","listItemDepth","lastItemDepth","_ref","end","setEnd","flData","setFlData","fetch","setTimeout","current","scrollToIndex","index","Number","length","animated","checkScroll","layoutMeasurement","contentOffset","contentSize","slice","x","width","nativeEvent","Math","floor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { FlatList } from 'react-native';\n\nconst FlatListWithLoop = ({ data = null, horizontal, ...props }: any = {}) => {\n  let offset = 20;\n  const listItemDepth = 92;\n  const lastItemDepth = 20;\n  const _ref = useRef<FlatList>();\n\n  const [end, setEnd] = useState(true);\n  const [flData, setFlData] = useState(data);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setFlData([...(data ?? []), ...(data ?? [])]);\n      setTimeout(() => {\n        _ref.current?.scrollToIndex({\n          index: Number(data?.length),\n          animated: false,\n        });\n      }, 0);\n    };\n    fetch();\n  }, [data]);\n\n  const checkScroll = async ({\n    layoutMeasurement,\n    contentOffset,\n    contentSize,\n  }: any) => {\n    if (flData.length >= Number(data?.length) * 3)\n      setFlData(flData.slice(Number(data?.length) * 2));\n\n    if (contentOffset.x <= offset) {\n      setFlData([...flData, ...data]);\n      _ref.current?.scrollToIndex({\n        index: Number(data?.length),\n        animated: false,\n      });\n    }\n    if (\n      layoutMeasurement.width + contentOffset.x >= contentSize.width - offset &&\n      end\n    ) {\n      setFlData([...flData, ...data]);\n      setEnd(false);\n    } else {\n      setEnd(true);\n    }\n  };\n\n  return (\n    <FlatList\n      ref={_ref}\n      onScroll={({ nativeEvent }) => checkScroll(nativeEvent)}\n      horizontal={horizontal}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      getItemLayout={(data, index) => ({\n        length:\n          index % Number(data?.length) === Number(data?.length) - 1\n            ? lastItemDepth\n            : listItemDepth,\n        offset:\n          listItemDepth * index -\n          Math.floor(index / Number(data?.length)) * (listItemDepth + offset),\n        index,\n      })}\n      {...props}\n    />\n  );\n};\n\nexport default FlatListWithLoop;\n"]}